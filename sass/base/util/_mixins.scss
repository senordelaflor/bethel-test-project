//media queries
$breakpoints: (
        "sm": 320px,
        "md": 736px,
        "lg": 1069px,
        "xl": 1442px,
);

@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

//responsive background images
@mixin bg($image-name, $extension) {
  background-image: url($image-name + "_large." + $extension);
  @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx), (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi) {
    background-image: url($image-name + "_large_2x." + $extension);
  }
  @media only screen and (max-width: $lg - 1px) {
    background-image: url($image-name + "_medium." + $extension);
  }
  @media only screen and (max-width: $lg - 1px) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: $lg - 1px) and (min-resolution: 1.5dppx), only screen and (max-width: $lg - 1px) and (min-resolution: 144dpi) {
    background-image: url($image-name + "_medium_2x." + $extension);
  }
  @media only screen and (max-width: $md - 1px) {
    background-image: url($image-name + "_small." + $extension);
  }
  @media only screen and (max-width: $md - 1px) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: $md - 1px) and (min-resolution: 1.5dppx), only screen and (max-width: $md - 1px) and (min-resolution: 144dpi) {
    background-image: url($image-name + "_small_2x." + $extension);
  }
}