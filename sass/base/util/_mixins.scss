//media queries
$sm: 320px;
$md: 736px;
$lg: 1069px;
$xl: 1442px;

@mixin mq($breakpoint, $type: min) {
    @if $type == max {
      $breakpoint: $breakpoint - 1px;
    }
    @media only screen and (#{$type}-width: $breakpoint) {
      @content;
    }
}

@mixin double-mq($min-breakpoint, $max-breakpoint) {
  @media only screen and (min-width: $breakpoint) and (max-width: $second-breakpoint) {
    @content;
  }
}

//responsive background images
@mixin bg($image-path, $image-name, $extension) {
  background-image: url($image-path + $image-name + '_large.' + $extension);
  @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx), (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi) {
    background-image: url($image-path + $image-name + '_large_2x.' + $extension);
  }
  @media only screen and (max-width: $lg - 1px) {
    background-image: url($image-path + $image-name + '_medium.' + $extension);
  }
  @media only screen and (max-width: $lg - 1px) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: $lg - 1px) and (min-resolution: 1.5dppx), only screen and (max-width: $lg - 1px) and (min-resolution: 144dpi) {
    background-image: url($image-path + $image-name + '_medium_2x.' + $extension);
  }
  @media only screen and (max-width: $md - 1px) {
    background-image: url($image-path + $image-name + '_small.' + $extension);
  }
  @media only screen and (max-width: $md - 1px) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: $md - 1px) and (min-resolution: 1.5dppx), only screen and (max-width: $md - 1px) and (min-resolution: 144dpi) {
    background-image: url($image-path + $image-name + '_small_2x.' + $extension);
  }
}