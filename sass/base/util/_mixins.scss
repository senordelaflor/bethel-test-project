//media queries
$breakpoint-xsmall: 320px;
$breakpoint-small: 480px;
$breakpoint-medium: 736px;
$breakpoint-large: 1069px;
$breakpoint-xlarge: 1442px;

@mixin mq($breakpoint, $type: min) {
  @if $type == max {
    $breakpoint: $breakpoint - 1px;
  }
  @media only screen and (#{$type}-width: $breakpoint) {
    @content;
  }
}

@mixin double-mq($min-breakpoint, $max-breakpoint) {
  @media only screen and (min-width: $breakpoint) and (max-width: $second-breakpoint) {
    @content;
  }
}

//responsive background images
@mixin responsive-fullscreen-bg-img($image-path, $image-name, $extension: 'jpg') {
  background-image: url($image-path + $image-name + '_large.' + $extension);
  @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx), (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi) {
    background-image: url($image-path + $image-name + '_large_2x.' + $extension);
  }
  @media only screen and (max-width: $breakpoint-large - 1px) {
    background-image: url($image-path + $image-name + '_medium.' + $extension);
  }
  @media only screen and (max-width: $breakpoint-large - 1px) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: $breakpoint-large - 1px) and (min-resolution: 1.5dppx), only screen and (max-width: $breakpoint-large - 1px) and (min-resolution: 144dpi) {
    background-image: url($image-path + $image-name + '_medium_2x.' + $extension);
  }
  @media only screen and (max-width: $breakpoint-medium - 1px) {
    background-image: url($image-path + $image-name + '_small.' + $extension);
  }
  @media only screen and (max-width: $breakpoint-medium - 1px) and (-webkit-min-device-pixel-ratio: 1.5), only screen and (max-width: $breakpoint-medium - 1px) and (min-resolution: 1.5dppx), only screen and (max-width: $breakpoint-medium - 1px) and (min-resolution: 144dpi) {
    background-image: url($image-path + $image-name + '_small_2x.' + $extension);
  }
}

@mixin retina-bg-img($image-path, $image-name, $extension: 'jpg') {
  background-image: url($image-path + $image-name + '.' + $extension);
  @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx), (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi) {
    background-image: url($image-path + $image-name + '_2x.' + $extension);
  }
}

@mixin hero($parallax: null) {
  @if ($parallax == 'parallax') {
    @include mq($breakpoint-large, max) {
      position: relative;
      min-height: 100vh;
      background: $white no-repeat center;
      background-size: cover;
      width: auto;
      @content;
    }
    @include mq($breakpoint-large) {
      position: relative;
      min-height: 100vh;
      &::before {
        content: '';
        top: 0;
        left: 0;
        background: $white no-repeat center;
        background-size: cover;
        position: fixed;
        width: 100%;
        height: 100%;
        z-index: -1;
        @content;
      }
    }
  }
  @else {
    position: relative;
    min-height: 100vh;
    background: $white no-repeat center;
    background-size: cover;
    width: auto;
    @content;
  }
}

//center absolute element
@mixin center-absolute($width) {
  position: absolute;
  width: $width;
  bottom: 65px;
  left: 0;
  right: 0;
  margin: 0 auto;
}

//add opaque background
@mixin opaque-bg($color, $opacity, $height) {
  height: $height;
  &::before {
    content: '';
    position: absolute;
    background-color: $color;
    opacity: $opacity;
    width: 100%;
    left: 0;
    right: 0;
    margin: 0 auto;
    height: $height;
    @content;
  }
}

//animation
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}